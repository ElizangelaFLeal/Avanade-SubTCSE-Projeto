ò
ÅC:\Projetos\Avanade-SubTCSE-Projeto\Avanade-SubTCSE-Projeto\src\Avanade.SubTCSE.Projeto.Api\Controllers\EmployeeRoleController.cs
	namespace 	#
Avanade_SubTCSE_Projeto
 !
.! "
Api" %
.% &
Controllers& 1
{		 
[

 
Route

 

(


 
$str

 3
)

3 4
]

4 5
[ 

ApiVersion 
( 
$str 
, 

Deprecated 
=  !
false" '
)' (
]( )
[ 
ApiController 
] 
[ 
ApiExplorerSettings 
( 
	GroupName "
=# $
$str% )
)) *
]* +
public 

class "
EmployeeRoleController '
:( )
ControllerBase* 8
{ 
[ 	
HttpPost	 
( 
Name 
= 
$str '
)' (
]( )
[ 	
Consumes	 
( 
MediaTypeNames  
.  !
Application! ,
., -
Json- 1
)1 2
]2 3
[ 	 
ProducesResponseType	 
( 
typeof $
(% &
EmployeeRoleDto& 5
)5 6
,6 7
StatusCodes8 C
.C D
Status201CreatedD T
)T U
]U V
[ 	 
ProducesResponseType	 
( 
StatusCodes )
.) *(
Status500InternalServerError* F
)F G
]G H
public 
async 
Task 
< 
IActionResult '
>' (
CreateEmployeeRole) ;
(; <
[< =
FromBody= E
]E F
EmployeeRoleDtoG V
employeeRoleDtoW f
)f g
{ 	"
EmployeeRoleAppService ""
employeeRoleAppService# 9
=: ;
new< ?"
EmployeeRoleAppService@ V
(V W
)W X
;X Y
var 
item 
= 
await "
employeeRoleAppService 2
.2 3 
AddEmployeeRoleAsync3 G
(G H
employeeRoleDtoH W
)W X
;X Y
if 
( 
! 
item 
. 
ValidationResult &
.& '
IsValid' .
). /
{ 
return 

BadRequest !
(! "
string" (
.( )
Join) -
(- .
$char. 2
,2 3
item4 8
.8 9
ValidationResult9 I
.I J
ErrorsJ P
)P Q
)Q R
;R S
} 
return 
Ok 
( 
) 
; 
} 	
}   
}!! Ç
ÑC:\Projetos\Avanade-SubTCSE-Projeto\Avanade-SubTCSE-Projeto\src\Avanade.SubTCSE.Projeto.Api\Controllers\WeatherForecastController.cs
	namespace 	
Avanade
 
. 
SubTCSE 
. 
Projeto !
.! "
Api" %
.% &
Controllers& 1
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private 
static 
readonly 
string  &
[& '
]' (
	Summaries) 2
=3 4
new5 8
[8 9
]9 :
{ 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
var 
rng 
= 
new 
Random  
(  !
)! "
;" #
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
WeatherForecast> M
{ 
Date   
=   
DateTime   
.    
Now    #
.  # $
AddDays  $ +
(  + ,
index  , 1
)  1 2
,  2 3
TemperatureC!! 
=!! 
rng!! "
.!!" #
Next!!# '
(!!' (
-!!( )
$num!!) +
,!!+ ,
$num!!- /
)!!/ 0
,!!0 1
Summary"" 
="" 
	Summaries"" #
[""# $
rng""$ '
.""' (
Next""( ,
("", -
	Summaries""- 6
.""6 7
Length""7 =
)""= >
]""> ?
}## 
)## 
.$$ 
ToArray$$ 
($$ 
)$$ 
;$$ 
}%% 	
}&& 
}'' £
fC:\Projetos\Avanade-SubTCSE-Projeto\Avanade-SubTCSE-Projeto\src\Avanade.SubTCSE.Projeto.Api\Program.cs
	namespace

 	
Avanade


 
.

 
SubTCSE

 
.

 
Projeto

 !
.

! "
Api

" %
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ⁄ 
fC:\Projetos\Avanade-SubTCSE-Projeto\Avanade-SubTCSE-Projeto\src\Avanade.SubTCSE.Projeto.Api\Startup.cs
	namespace

 	
Avanade


 
.

 
SubTCSE

 
.

 
Projeto

 !
.

! "
Api

" %
{ 
public 

class 
Startup 
{ 
public 
IConfiguration 
_configuration ,
{- .
get/ 2
;2 3
}4 5
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
_configuration 
= 
configuration *
;* +
} 	
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
services 
. 
AddApiVersioning %
(% &
options 
=> 
{ 
options 
. 
ReportApiVersions -
=. /
true0 4
;4 5
options 
. /
#AssumeDefaultVersionWhenUnspecified ?
=@ A
trueB F
;F G
options   
.   
DefaultApiVersion   -
=  . /
new  0 3

ApiVersion  4 >
(  > ?
$num  ? @
,  @ A
$num  B C
)  C D
;  D E
}!! 
)!! 
."" #
AddVersionedApiExplorer"" (
(""( )
options"") 0
=>""1 3
{## 
options$$ 
.$$ 
GroupNameFormat$$ +
=$$, -
$str$$. 6
;$$6 7
options%% 
.%% %
SubstituteApiVersionInUrl%% 5
=%%6 7
true%%8 <
;%%< =
}&& 
)&& 
;&& 
services(( 
.(( 
AddSwaggerGen(( "
(((" #
c((# $
=>((% '
{)) 
c** 
.** 

SwaggerDoc** 
(** 
$str** !
,**! "
new**# &
OpenApiInfo**' 2
{**3 4
Title**5 :
=**; <
$str**= Z
,**Z [
Version**\ c
=**d e
$str**f j
}**k l
)**l m
;**m n
}++ 
)++ 
;++ 
services-- 
.-- -
!AddRegisterDependenciesInjections-- 6
(--6 7
)--7 8
;--8 9
}.. 	
public11 
void11 
	Configure11 
(11 
IApplicationBuilder11 1
app112 5
,115 6
IWebHostEnvironment117 J
env11K N
)11N O
{22 	
if33 
(33 
env33 
.33 
IsDevelopment33 !
(33! "
)33" #
)33# $
{44 
app55 
.55 %
UseDeveloperExceptionPage55 -
(55- .
)55. /
;55/ 0
app66 
.66 

UseSwagger66 
(66 
)66  
;66  !
app77 
.77 
UseSwaggerUI77  
(77  !
c77! "
=>77# %
c77& '
.77' (
SwaggerEndpoint77( 7
(777 8
$str778 R
,77R S
$str77T t
)77t u
)77u v
;77v w
}88 
app:: 
.:: 
UseHttpsRedirection:: #
(::# $
)::$ %
;::% &
app<< 
.<< 

UseRouting<< 
(<< 
)<< 
;<< 
app>> 
.>> 
UseAuthorization>>  
(>>  !
)>>! "
;>>" #
app@@ 
.@@ 
UseEndpoints@@ 
(@@ 
	endpoints@@ &
=>@@' )
{AA 
	endpointsBB 
.BB 
MapControllersBB (
(BB( )
)BB) *
;BB* +
}CC 
)CC 
;CC 
}DD 	
}EE 
}FF ◊
nC:\Projetos\Avanade-SubTCSE-Projeto\Avanade-SubTCSE-Projeto\src\Avanade.SubTCSE.Projeto.Api\WeatherForecast.cs
	namespace 	
Avanade
 
. 
SubTCSE 
. 
Projeto !
.! "
Api" %
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 